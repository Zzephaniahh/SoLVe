(declare-fun L9S0 () Bool)
(declare-fun L9S0$next () Bool)
(define-fun .L9S0 () Bool (! L9S0 :next L9S0$next))
(declare-fun L10S1 () Bool)
(declare-fun L10S1$next () Bool)
(define-fun .L10S1 () Bool (! L10S1 :next L10S1$next))
(declare-fun L11S2 () Bool)
(declare-fun L11S2$next () Bool)
(define-fun .L11S2 () Bool (! L11S2 :next L11S2$next))
(declare-fun L13S3 () Bool)
(declare-fun L13S3$next () Bool)
(define-fun .L13S3 () Bool (! L13S3 :next L13S3$next))
(declare-fun L13S4 () Bool)
(declare-fun L13S4$next () Bool)
(define-fun .L13S4 () Bool (! L13S4 :next L13S4$next))
(declare-fun L14S5 () Bool)
(declare-fun L14S5$next () Bool)
(define-fun .L14S5 () Bool (! L14S5 :next L14S5$next))
(declare-fun L18S9 () Bool)
(declare-fun L18S9$next () Bool)
(define-fun .L18S9 () Bool (! L18S9 :next L18S9$next))
(declare-fun L11S6 () Bool)
(declare-fun L11S6$next () Bool)
(define-fun .L11S6 () Bool (! L11S6 :next L11S6$next))
(declare-fun L11S7 () Bool)
(declare-fun L11S7$next () Bool)
(define-fun .L11S7 () Bool (! L11S7 :next L11S7$next))
(declare-fun L17S8 () Bool)
(declare-fun L17S8$next () Bool)
(define-fun .L17S8 () Bool (! L17S8 :next L17S8$next))
(declare-fun L18S10 () Bool)
(declare-fun L18S10$next () Bool)
(define-fun .L18S10 () Bool (! L18S10 :next L18S10$next))
(declare-fun L19S11 () Bool)
(declare-fun L19S11$next () Bool)
(define-fun .L19S11 () Bool (! L19S11 :next L19S11$next))
(declare-fun i () (_ BitVec 32))
(declare-fun i$next () (_ BitVec 32))
(define-fun .i () (_ BitVec 32) (! i :next i$next))
(declare-fun main () (_ BitVec 32))
(declare-fun main$next () (_ BitVec 32))
(define-fun .main () (_ BitVec 32) (! main :next main$next))


(define-fun .init () Bool (! 
 	(and
		L9S0
		(not L10S1)
		(not L11S2)
		(not L13S3)
		(not L13S4)
		(not L14S5)
		(not L18S9)
		(not L11S6)
		(not L11S7)
		(not L17S8)
		(not L18S10)
		(not L19S11)
	)
	:init true))




(define-fun trel_equations () Bool (!  
 	(and
	(= L9S0$next 			false)
	(= L10S1$next 			L9S0)
	(= L11S2$next 
		(or  L10S1  (and L11S6 (bvult i (_ bv5 32)))))
	(= L13S3$next 			L11S2)
	(= L13S4$next 
		(or  (and L13S3 (bvugt i (_ bv7 32)))))
	(= L14S5$next 
		(or  (and L13S3 (not (bvugt i (_ bv7 32))))))
	(= L18S9$next 			L13S4)
	(= L11S6$next 			L14S5)
	(= L18S10$next 			L18S9)
	(= L11S7$next 
		(or  (and L11S6 (not (bvult i (_ bv5 32))))))
	(= L17S8$next 			L11S7)
	(= L19S11$next 			false)
		(= i$next
		(ite
		 L9S0 		(_ bv0 32)
		(ite
		 (and L13S3 (not (bvugt i (_ bv7 32))))		(bvadd i (_ bv2 32))
			i)))
		(= main$next
		(ite
		 L11S7 		(_ bv0 32)
			main))
	) 
	:trans true))


; GLOBAL one-hot encoding assumptions
(define-fun one_hot_global () Bool
(and
(or (not L9S0) (not L10S1))
(or (not L9S0) (not L11S2))
(or (not L9S0) (not L13S3))
(or (not L9S0) (not L13S4))
(or (not L9S0) (not L14S5))
(or (not L9S0) (not L18S9))
(or (not L9S0) (not L11S6))
(or (not L9S0) (not L11S7))
(or (not L9S0) (not L17S8))
(or (not L9S0) (not L18S10))
(or (not L9S0) (not L19S11))
(or (not L10S1) (not L11S2))
(or (not L10S1) (not L13S3))
(or (not L10S1) (not L13S4))
(or (not L10S1) (not L14S5))
(or (not L10S1) (not L18S9))
(or (not L10S1) (not L11S6))
(or (not L10S1) (not L11S7))
(or (not L10S1) (not L17S8))
(or (not L10S1) (not L18S10))
(or (not L10S1) (not L19S11))
(or (not L11S2) (not L13S3))
(or (not L11S2) (not L13S4))
(or (not L11S2) (not L14S5))
(or (not L11S2) (not L18S9))
(or (not L11S2) (not L11S6))
(or (not L11S2) (not L11S7))
(or (not L11S2) (not L17S8))
(or (not L11S2) (not L18S10))
(or (not L11S2) (not L19S11))
(or (not L13S3) (not L13S4))
(or (not L13S3) (not L14S5))
(or (not L13S3) (not L18S9))
(or (not L13S3) (not L11S6))
(or (not L13S3) (not L11S7))
(or (not L13S3) (not L17S8))
(or (not L13S3) (not L18S10))
(or (not L13S3) (not L19S11))
(or (not L13S4) (not L14S5))
(or (not L13S4) (not L18S9))
(or (not L13S4) (not L11S6))
(or (not L13S4) (not L11S7))
(or (not L13S4) (not L17S8))
(or (not L13S4) (not L18S10))
(or (not L13S4) (not L19S11))
(or (not L14S5) (not L18S9))
(or (not L14S5) (not L11S6))
(or (not L14S5) (not L11S7))
(or (not L14S5) (not L17S8))
(or (not L14S5) (not L18S10))
(or (not L14S5) (not L19S11))
(or (not L18S9) (not L11S6))
(or (not L18S9) (not L11S7))
(or (not L18S9) (not L17S8))
(or (not L18S9) (not L18S10))
(or (not L18S9) (not L19S11))
(or (not L11S6) (not L11S7))
(or (not L11S6) (not L17S8))
(or (not L11S6) (not L18S10))
(or (not L11S6) (not L19S11))
(or (not L11S7) (not L17S8))
(or (not L11S7) (not L18S10))
(or (not L11S7) (not L19S11))
(or (not L17S8) (not L18S10))
(or (not L17S8) (not L19S11))
(or (not L18S10) (not L19S11))
)
)
; GLOBAL one-hot encoding assumptions
(define-fun one_hot_global$next () Bool
(and
(or (not L9S0$next) (not L10S1$next))
(or (not L9S0$next) (not L11S2$next))
(or (not L9S0$next) (not L13S3$next))
(or (not L9S0$next) (not L13S4$next))
(or (not L9S0$next) (not L14S5$next))
(or (not L9S0$next) (not L18S9$next))
(or (not L9S0$next) (not L11S6$next))
(or (not L9S0$next) (not L11S7$next))
(or (not L9S0$next) (not L17S8$next))
(or (not L9S0$next) (not L18S10$next))
(or (not L9S0$next) (not L19S11$next))
(or (not L10S1$next) (not L11S2$next))
(or (not L10S1$next) (not L13S3$next))
(or (not L10S1$next) (not L13S4$next))
(or (not L10S1$next) (not L14S5$next))
(or (not L10S1$next) (not L18S9$next))
(or (not L10S1$next) (not L11S6$next))
(or (not L10S1$next) (not L11S7$next))
(or (not L10S1$next) (not L17S8$next))
(or (not L10S1$next) (not L18S10$next))
(or (not L10S1$next) (not L19S11$next))
(or (not L11S2$next) (not L13S3$next))
(or (not L11S2$next) (not L13S4$next))
(or (not L11S2$next) (not L14S5$next))
(or (not L11S2$next) (not L18S9$next))
(or (not L11S2$next) (not L11S6$next))
(or (not L11S2$next) (not L11S7$next))
(or (not L11S2$next) (not L17S8$next))
(or (not L11S2$next) (not L18S10$next))
(or (not L11S2$next) (not L19S11$next))
(or (not L13S3$next) (not L13S4$next))
(or (not L13S3$next) (not L14S5$next))
(or (not L13S3$next) (not L18S9$next))
(or (not L13S3$next) (not L11S6$next))
(or (not L13S3$next) (not L11S7$next))
(or (not L13S3$next) (not L17S8$next))
(or (not L13S3$next) (not L18S10$next))
(or (not L13S3$next) (not L19S11$next))
(or (not L13S4$next) (not L14S5$next))
(or (not L13S4$next) (not L18S9$next))
(or (not L13S4$next) (not L11S6$next))
(or (not L13S4$next) (not L11S7$next))
(or (not L13S4$next) (not L17S8$next))
(or (not L13S4$next) (not L18S10$next))
(or (not L13S4$next) (not L19S11$next))
(or (not L14S5$next) (not L18S9$next))
(or (not L14S5$next) (not L11S6$next))
(or (not L14S5$next) (not L11S7$next))
(or (not L14S5$next) (not L17S8$next))
(or (not L14S5$next) (not L18S10$next))
(or (not L14S5$next) (not L19S11$next))
(or (not L18S9$next) (not L11S6$next))
(or (not L18S9$next) (not L11S7$next))
(or (not L18S9$next) (not L17S8$next))
(or (not L18S9$next) (not L18S10$next))
(or (not L18S9$next) (not L19S11$next))
(or (not L11S6$next) (not L11S7$next))
(or (not L11S6$next) (not L17S8$next))
(or (not L11S6$next) (not L18S10$next))
(or (not L11S6$next) (not L19S11$next))
(or (not L11S7$next) (not L17S8$next))
(or (not L11S7$next) (not L18S10$next))
(or (not L11S7$next) (not L19S11$next))
(or (not L17S8$next) (not L18S10$next))
(or (not L17S8$next) (not L19S11$next))
(or (not L18S10$next) (not L19S11$next))
)
)
; With GLOBAL one-hotness the combined formula is:
(define-fun .trans () Bool (! 
(and 
trel_equations 
one_hot_global
one_hot_global$next
) 
:trans true))

(define-fun .property () Bool (!
	(and
	(not
	 L18S10
	)) 
:invar-property 0))
