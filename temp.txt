

L2+ = L1 & (True) || L4 & (i < 7)
(declare-fun L2 () Bool)
(declare-fun L2n () Bool)
(define-fun .L2rel () Int (! L2 :next L2n))
(define-fun .L2init () Bool (! L2 0) :L2init true))
(define-fun .L2trans () Bool (! L2n (L1)) :L2trans True))
#OR
(declare-fun L2 () Bool)
(declare-fun L2n () Bool)
(define-fun .L2rel () Int (! L2 :next L2n))
(define-fun .L2init () Bool (! L2 0) :L2init true))
(define-fun .L2trans () Bool (! L2n (L4)) :L2trans i < 7))




L3+ = L2 & (True)

(declare-fun L3 () Bool)
(declare-fun L3n () Bool)
(define-fun .L3rel () Int (! L3 :next L3n))
(define-fun .L3init () Bool (! L3 0) :L3init true))
(define-fun .L3trans () Bool (! L3n (L2)) :L3trans True))




L4+ = L3 & (True)
L5+ = L4 & (!i < 7)
L6+ = L5 & (True)
L1 --> i+ = 2
L3 --> i+ = i + 2
!L1 & !L3 --> i+ = i
